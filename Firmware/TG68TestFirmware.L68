00000008 Starting Address
Assembler used: EASy68K Editor/Assembler v5.12.0
Created On: 27/05/2012 10:39:04

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Program    : TG68TestFirmware
00000000                             3  * Written by : Alastair M. Robinson
00000000                             4  * Date       : 2012-05-22
00000000                             5  * Description: Simple program to test the TG68 processor.
00000000                             6  *-----------------------------------------------------------
00000000                             7  
00000000  =000FFFFA                  8  RANDOMSEED equ $ffffa
00000000  =000FFFFE                  9  PEN equ $ffffe
00000000  =00100000                 10  FRAMEBUFFER equ $100000
00000000  =00000280                 11  FB_WIDTH equ 640
00000000  =000001E0                 12  FB_HEIGHT equ 480
00000000                            13  
00000000                            14          ORG     $0
00000000= 007FFFFE                  15          dc.l    $7ffffe         ; Initial stack pointer
00000004= 00000008                  16          dc.l    START
00000008                            17          
00000008                            18  START:                          ; first instruction of program
00000008  33FC 0000 000FFFFE        19          move.w  #$0,pen
00000010  6100 012A                 20          bsr     FillScreen
00000014                            21  
00000014  7000                      22          move.l  #0,d0
00000016  7201                      23          move.l  #1,d1
00000018                            24  .mainloop
00000018  5279 000FFFFE             25          add.w   #1,pen
0000001E  6100 0076                 26          bsr     Random
00000022  2600                      27          move.l  d0,d3
00000024  6100 0070                 28          bsr     Random
00000028  2400                      29          move.l  d0,d2
0000002A  6100 006A                 30          bsr     Random
0000002E  2200                      31          move.l  d0,d1
00000030  6100 0064                 32          bsr     Random
00000034                            33  
00000034  80FC 027F                 34          divu    #FB_WIDTH-1,d0
00000038  4240                      35          clr.w   d0
0000003A  4840                      36          swap    d0
0000003C                            37  
0000003C  82FC 01DF                 38          divu    #FB_HEIGHT-1,d1
00000040  4241                      39          clr.w   d1
00000042  4841                      40          swap    d1
00000044                            41          
00000044  283C 0000027F             42          move.l  #FB_WIDTH-1,d4
0000004A  9880                      43          sub.l   d0,d4
0000004C  84C4                      44          divu    d4,d2
0000004E  4242                      45          clr.w   d2
00000050  4842                      46          swap    d2
00000052                            47          
00000052  283C 000001DF             48          move.l  #FB_HEIGHT-1,d4
00000058  9881                      49          sub.l   d1,d4
0000005A  86C4                      50          divu    d4,d3
0000005C  4243                      51          clr.w   d3
0000005E  4843                      52          swap    d3
00000060                            53          
00000060  5242                      54          addq    #1,d2
00000062  5243                      55          addq    #1,d3
00000064  41F9 00100000             56          lea     FrameBuffer,a0
0000006A  6100 0088                 57          bsr     DrawRectangle
0000006E  60A8                      58          bra     .mainloop
00000070                            59  
00000070  103C 0009                 60          MOVE.B  #9,D0
00000074  4E4F                      61          TRAP    #15             ; halt simulator
00000076                            62  
00000076                            63  
00000076                            64  Plot                            ; X: d0, y: d1
00000076  48E7 C080                 65          movem.l a0/d0-d1,-(a7)
0000007A  41F9 00100000             66          lea     FRAMEBUFFER,a0
00000080  C2FC 0500                 67          mulu    #FB_WIDTH*2,d1
00000084  E380                      68          asl.l   #1,d0
00000086  D081                      69          add.l   d1,d0
00000088  D1C0                      70          add.l   d0,a0
0000008A  30B9 000FFFFE             71          move.w  pen,(a0)
00000090  4CDF 0103                 72          movem.l (a7)+,a0/d0-d1
00000094  4E75                      73          rts
00000096                            74  
00000096                            75  
00000096                            76  Random
00000096  48E7 6000                 77          movem.l d1-d2,-(a7)
0000009A  203C 000041A7             78          move.l  #16807,d0
000000A0  2400                      79          move.l  d0,d2
000000A2  C0F9 000FFFFC             80          mulu    RANDOMSEED+2,d0
000000A8                            81  
000000A8  2200                      82          move.l  d0,d1
000000AA  9241                      83          sub.w   d1,d1
000000AC  4841                      84          swap    d1
000000AE  C4F9 000FFFFA             85          mulu    RANDOMSEED,d2
000000B4  D481                      86          add.l   d1,d2
000000B6                            87  
000000B6  2202                      88          move.l  d2,d1
000000B8  D281                      89          add.l   d1,d1
000000BA  4241                      90          clr.w   d1
000000BC  4841                      91          swap    d1
000000BE                            92  
000000BE  C0BC 0000FFFF             93          and.l   #$0000FFFF,d0
000000C4  C0BC 7FFFFFFF             94          and.l   #$7FFFFFFF,d0
000000CA  C4BC 00007FFF             95          and.l   #$00007FFF,d2
000000D0  4842                      96          swap    D2
000000D2  D481                      97          add.l   D1,D2
000000D4  D082                      98          add.l   D2,D0
000000D6                            99  
000000D6  6A00 0008                100          bpl     .upd
000000DA  0680 7FFFFFFF            101          add.l   #$7FFFFFFF,d0
000000E0  23C0 000FFFFA            102  .upd    move.l  d0,RANDOMSEED
000000E6  4840                     103          swap    d0
000000E8  303C 0000                104          move.w  #0,d0
000000EC  4840                     105          swap    d0
000000EE  4CDF 0006                106          movem.l (a7)+,d1-d2
000000F2  4E75                     107          rts
000000F4                           108          
000000F4                           109  
000000F4                           110  DrawRectangle   ; d0: x, d1: y, d2: w, d3: h, a0: framebuffer
000000F4  48E7 7C00                111          movem.l d1-d5,-(a7)
000000F8  D281                     112          add.l   d1,d1
000000FA  C2FC 0280                113          mulu    #FB_WIDTH,d1    ; y offset
000000FE  D1C1                     114          add.l   d1,a0
00000100  D080                     115          add.l   d0,d0
00000102  D1C0                     116          add.l   d0,a0           ; x offset
00000104  203C 00000280            117          move.l  #FB_WIDTH,d0
0000010A  9082                     118          sub.l   d2,d0           ; modulo
0000010C  D080                     119          add.l   d0,d0
0000010E                           120          
0000010E  3839 000FFFFE            121          move.w  pen,d4
00000114  E28C                     122          lsr.l   #1,d4
00000116  C8BC 00007BEF            123          and.l   #%0111101111101111,d4   ; Remove MSBs
0000011C                           124  .yloop
0000011C  2202                     125          move.l  d2,d1
0000011E                           126  .xloop
0000011E  3A10                     127          move.w  (a0),d5
00000120  E28D                     128          lsr.l   #1,d5
00000122  CABC 00007BEF            129          and.l   #%0111101111101111,d5   ; Remove MSBs
00000128  DA44                     130          add.w   d4,d5   
0000012A  30C5                     131          move.w  d5,(a0)+
0000012C  5341                     132          subq.w  #1,d1
0000012E  66EE                     133          bne     .xloop
00000130                           134  
00000130  D1C0                     135          add.l   d0,a0           ; Add modulo
00000132                           136  
00000132  5343                     137          subq.w  #1,d3
00000134  66E6                     138          bne     .yloop
00000136                           139  
00000136  4CDF 003E                140          movem.l (a7)+,d1-d5
0000013A  4E75                     141          rts
0000013C                           142  
0000013C                           143  
0000013C                           144  FillScreen
0000013C  48E7 78F8                145          movem.l a0-a4/d1-d4,-(a7)
00000140  41F9 00100000            146          lea     FRAMEBUFFER,a0
00000146  203C 000001E0            147          move.l  #FB_HEIGHT,d0
0000014C  C0FC 0280                148          mulu    #FB_WIDTH,d0
00000150  D1C0                     149          add.l   d0,a0
00000152  D1C0                     150          add.l   d0,a0           ; Point to end of buffer
00000154  E888                     151          lsr.l   #4,d0           ; We're moving 16 bytes at a time
00000156  3239 000FFFFE            152          move.w  pen,d1
0000015C  4841                     153          swap    d1
0000015E  3239 000FFFFE            154          move.w  pen,d1
00000164  2401                     155          move.l  d1,d2
00000166  2601                     156          move.l  d1,d3
00000168  2801                     157          move.l  d1,d4
0000016A  2241                     158          move.l  d1,a1
0000016C  2441                     159          move.l  d1,a2
0000016E  2641                     160          move.l  d1,a3
00000170  2841                     161          move.l  d1,a4
00000172                           162  .fillloop
00000172  48E0 7878                163          movem.l a1-a4/d1-d4,-(a0)
00000176  5380                     164          sub.l   #1,d0
00000178  66F8                     165          bne     .fillloop
0000017A  4CDF 1F1E                166          movem.l (a7)+,a0-a4/d1-d4
0000017E  4E75                     167          rts
00000180                           168                  
00000180                           169          END     START           ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
DRAWRECTANGLE       F4
DRAWRECTANGLE:XLOOP  11E
DRAWRECTANGLE:YLOOP  11C
FB_HEIGHT           1E0
FB_WIDTH            280
FILLSCREEN          13C
FILLSCREEN:FILLLOOP  172
FRAMEBUFFER         100000
PEN                 FFFFE
PLOT                76
RANDOM              96
RANDOM:UPD          E0
RANDOMSEED          FFFFA
START               8
START:MAINLOOP      18
